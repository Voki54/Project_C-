@using Project_Manager.ViewModels.Dictionaries
@model Project_Manager.ViewModels.ParticipantsVM

@{
    ViewData["Title"] = "Участники";
}

<table class="table">
    <thead>
        <tr>
            @* <th>
            @Html.DisplayNameFor(model => model.Name)
            </th> *@

            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Participants.Count() == 0)
        {
            <tr>В вашем проекте пока нет участников. Вы можете пригласить их, отправив им ссылку-приглашение.</tr>
        }
        else
        {
            foreach (var participant in Model.Participants)
            {
                <tr>
                    <td>@participant.Name</td>
                    <td>@participant.Email</td>
                    <td>
                        <form asp-action="ChangeRole" method="post">
                            <div class="form-group">
                                <select class="role-select" name="userRole" data-default-role="@participant.Role">
                                    @foreach (var role in UserRolesDescription.userRoles)
                                    {
                                        <option value="@role.Key">@role.Value</option>
                                    }
                                </select>

                            </div>
                            <!-- Передаем ID проекта и пользователя через скрытые поля -->
                            <input type="hidden" name="userId" value="@participant.Id" />
                            <input type="hidden" name="projectId" value="@Model.ProjectId" />
                            <button type="submit" class="btn btn-success">+</button>
                        </form>
                    </td>
                    <td>
@*                         <button class="btn btn-danger btn-exclude-participant"
                                data-user-id="@participant.Id"
                                data-project-id="@Model.ProjectId"
                                data-user-name="@participant.Name">
                            Исключить
                        </button> *@
                        @* <a asp-action="ExcludeParticipant" asp-route-userId="@participant.Id" asp-route-projectId="@Model.ProjectId">Exclude</a> *@
                    </td>
                    <td>
                        <button class="btn btn-danger btn-exclude-participant"
                                type="button"
                                data-user-id="@participant.Id"
                                data-project-id="@Model.ProjectId"
                                data-user-name="@participant.Name"
                                onclick="openExclusionModal(this)">
                            Исключить
                        </button>
@*                         <button class="btn btn-danger btn-exclude-participant" type="button" onclick="window['confirm-exclusion'].showModal()" aria-controls="confirm-exclusion">
                            Исключить
                        </button> *@
                        <button class="button button-orange" type="button" onclick="window['closeMe'].showModal()" aria-controls="closeMe">
                            Открыть модальное окно
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>



<dialog open="open" id="closeMe" class="dialog" aria-labelledby="dialog-name">
    <h2 class="dialog__title" id="dialog-name">Закрой меня! 🙏</h2>
    <p>Результат этих кнопок одинаковый.</p>
    <button class="dialog__button button-orange" type="button" onclick="window['closeMe'].close()">
        Закрыть с помощью JavaScript
    </button>
</dialog>

<dialog class="dialog" id="confirm-exclusion" aria-labelledby="dialog-name">
    <h4 class="dialog__title" id="dialog-name">
        Вы уверены, что хотите исключить пользователя <span id="user-name"></span> из проекта?<br />
        Отменить действие будет невозможно.
    </h4>
    <form asp-action="ExcludeParticipant" method="post" id="exclusion-form">
        <input type="hidden" name="userId" id="hidden-user-id" />
        <input type="hidden" name="projectId" id="hidden-project-id" />
        <button type="submit" class="btn btn-danger">
            Исключить
        </button>
        <button type="button" onclick="window['confirm-exclusion'].close()">
            Отмена
        </button>
    </form>
</dialog>

<script>
    const selects = document.querySelectorAll('.role-select');

    selects.forEach(select => {
        const defaultRole = select.getAttribute('data-default-role'); // Получаем значение по умолчанию
        select.value = defaultRole; // Устанавливаем значение
    });

    // Открытие модального окна
    function openExclusionModal(button) {
        const userId = button.getAttribute('data-user-id');
        const projectId = button.getAttribute('data-project-id');
        const userName = button.getAttribute('data-user-name');

        // Установка данных в модальное окно
        document.getElementById('user-name').textContent = userName;
        document.getElementById('hidden-user-id').value = userId;
        document.getElementById('hidden-project-id').value = projectId;

        // Показать модальное окно
        document.getElementById('confirm-exclusion').showModal();
    }
</script>

@* <div class="modal" id="confirmModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Exclusion</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to exclude <span id="userToRemove"></span> from the project?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close-modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRemoveBtn">Exclude</button>
            </div>
        </div>
    </div>
</div>




<script>



    document.addEventListener('DOMContentLoaded', () => {
        // Обработчик кнопок "Exclude"
        document.querySelectorAll('.btn-exclude-participant').forEach(button => {
            button.addEventListener('click', () => {
                const userId = button.getAttribute('data-user-id');
                const projectId = button.getAttribute('data-project-id');
                const userName = button.getAttribute('data-user-name');

                // Установка информации в модальное окно
                document.getElementById('userToRemove').textContent = userName;
                document.getElementById('confirmRemoveBtn').setAttribute('data-user-id', userId);
                document.getElementById('confirmRemoveBtn').setAttribute('data-project-id', projectId);

                $('#confirmModal').modal('show');
            });
        });

        // Обработчик подтверждения удаления
        document.getElementById('confirmRemoveBtn').addEventListener('click', async () => {
            const userId = document.getElementById('confirmRemoveBtn').getAttribute('data-user-id');
            const projectId = document.getElementById('confirmRemoveBtn').getAttribute('data-project-id');

            if (!userId || !projectId) return;

            try {
                const response = await fetch('/Participants/ExcludeParticipant', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ userId, projectId })
                });

                if (response.ok) {
                    location.reload(); // Перезагрузка страницы
                } else {
                    const error = await response.text();
                    alert(error || "Не удалось исключить участника.");
                }
            } catch (err) {
                console.error(err);
                alert("Произошла ошибка при исключении участника.");
            }

            $('#confirmModal').modal('hide');
        });
    });

    document.querySelectorAll('.close-modal').forEach(button => {
        button.addEventListener('click', () => {
            const modal = document.querySelector('#confirmModal');
            const modalInstance = bootstrap.Modal.getInstance(modal); // Получаем экземпляр модального окна
            modalInstance.hide(); // Закрываем модальное окно
        });
    });

</script> *@